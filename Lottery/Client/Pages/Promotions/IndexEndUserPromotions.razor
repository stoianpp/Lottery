@page "/enduserpromotions"
@inject IPromotionRepository promotionRepository
@attribute [Authorize]

<h3>Active Promotions</h3>

<Pagination CurrentPage="@paginationDTO.Page" TotalAmountPages="totalAmountPages"
            SelectedPage="SelectedPage" />

<GenericList List="Promotions">
    <WholeListTemplate>
        <table class="table table-striped">
            <thead>
                <tr>
                    <th></th>
                    <th>Name</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Promotions)
                {
                    <tr>
                        <td>
                            <a class="btn btn-success btn-width" href="/promotion/start/@item.Id">Open</a>
                        </td>
                        <td>@item.Name</td>
                    </tr>
                }
            </tbody>
        </table>
    </WholeListTemplate>
</GenericList>

@code {
    List<Promotion> Promotions;
    PaginationDTO paginationDTO = new PaginationDTO() { RecordsPerPage = 10 };
    private int totalAmountPages;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            await LoadPromotions();
        }
        catch (Exception ex)
        {

        }
    }

    private async Task LoadPromotions()
    {
        var paginatedResponse = await promotionRepository.GetPromotions(paginationDTO);
        Promotions = paginatedResponse.Response.Where(x => x.Active).ToList();
        totalAmountPages = paginatedResponse.TotalAmountPages;

    }

    private async Task SelectedPage(int page)
    {
        paginationDTO.Page = page;
        await LoadPromotions();
    }
}
